{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","setCategories","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,MAnCf,SAAsBC,GAAQ,IAAD,EAEWC,mBAAS,IAFpB,mBAElBC,EAFkB,KAENC,EAFM,KAiBzB,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAMS,eAAe,SAAAC,GAAI,OAAMR,GAAN,mBAAqBQ,OAC9CP,EAAc,OAMd,2BACAQ,KAAK,OACLC,MAAQV,EACRW,SAlBR,SAA4BR,GACxBF,EAAcE,EAAES,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAAM,0CAA4CF,EAAU,qDAF/C,SAGAG,MAAOD,GAHP,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAKFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAdvB,kBAkBZK,GAlBY,4CAAH,sDCcTO,MAff,SAAsB9B,GAIlB,OACI,yBAAK+B,UAAU,0CAEX,yBAAKC,IAAMhC,EAAMkB,IAAMe,IAAMjC,EAAM2B,QACnC,2BAAK3B,EAAM2B,SC0BRO,MAhCf,YAAiC,IAAblB,EAAY,EAAZA,SAAY,ECAJ,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA8BxC,OAjBAC,qBAAW,WAEPvB,EAAUC,GACLuB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEnB,IAKEoB,ED5B0BK,CAAczB,GAAlCY,EAFe,EAEpBN,KAAaa,EAFO,EAEPA,QAErB,OACI,6BAEI,wBAAIJ,UAAU,oCAAd,IAAmDf,EAAnD,KAEEmB,GAAW,yCAEb,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GACZ,OAAO,kBAAC,EAAD,eACPiB,IAAQjB,EAAIC,IACRD,UEgBTkB,MAjCf,WAAuB,MAIiB1C,mBAAU,CAAC,cAJ5B,mBAIZ2C,EAJY,KAIAnC,EAJA,KAQnB,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAIA,4BAEImC,EAAWpB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACI0B,IAAM1B,EACNA,SAAWA,U,MCnBnC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d6b1d646.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\nfunction AddCategory( props ){\n\n    const [inputValue, setInputValue] = useState(\"\");\n    \n    function handleInputChange( e ){\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2) {\n            props.setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue(\"\");\n        }\n    }\n\n    return(\n        <form onSubmit={ handleSubmit }>\n            <input  \n            type=\"text\" \n            value={ inputValue }\n            onChange= { handleInputChange }\n            />\n\n            </form>\n    );\n\n\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","\n\n\n    export const getGifs = async( category ) => {\n\n        const url = \"https://api.giphy.com/v1/gifs/search?q=\" + category +\"&limit=10&api_key=MV61toq9sIbQTsZU0PJCfch5IUxF3sBm\";\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        //data.data parece que también funcionaría\n        //console.log(data); \n\n        const gifs = data.map( img => {\n            //returns an object with the info I want\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        return gifs;\n\n    }","import React from \"react\";\n\nfunction GifGridItem( props ){\n\n    //console.log( props.img );\n\n    return(\n        <div className=\"card animate__animated animate__fadeIn\">\n        \n            <img src={ props.url } alt={ props.title } />\n            <p>{ props.title }</p>\n\n        </div>\n    );\n\n}\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nfunction GifGrid( { category } ){\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <div>\n\n            <h3 className=\"animate__animate animate__fadeIn\"> {category} </h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    \n                    images.map( img => {\n                    return <GifGridItem \n                    key = { img.id }\n                    {...img}/>\n                    })            \n                    }\n\n            </div>\n\n\n            \n\n        </div>\n    );\n\n\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n       // useEffect( () => {\n    //     getGifs( category )\n    //         .then ( setImages );    \n    \n    // },[ category ]);\n\n    useEffect( () => {\n\n        getGifs ( category )\n            .then( imgs => {\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n \n            })\n\n    }, [ category ]);\n\n\n\n\n    return state; //{ data: [], loading: true}\n\n\n}","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nfunction GifExpertApp(){\n\n    //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\n\n    const [categories, setCategories] = useState( [\"One Punch\"]);\n    \n    \n\n    return(  \n        <div>\n            <h2>GiffExpertApp</h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr />\n\n        \n\n            <ol>\n            {\n                categories.map( category => (\n                    <GifGrid \n                        key={ category }\n                        category={ category } />\n                ))\n\n            }\n           \n           \n            </ol>\n\n        </div>);\n \n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}